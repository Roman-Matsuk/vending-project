{"version":3,"sources":["components/AddCategory/AddCategory.jsx","components/AddItem/AddItem.jsx","components/Clear/Clear.jsx","components/List/List.jsx","utils/utils.js","components/DateInput/DateInput.jsx","components/Purchase/Purchase.jsx","components/Report/Report.jsx","components/CommandsPage/CommandsPage.jsx","components/Header/Header.jsx","components/Output/Output.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","categories","command","setCategories","setExecutedCommands","useState","name","setName","price","setPrice","amount","setAmount","isError","setIsError","className","onSubmit","event","preventDefault","find","category","Number","isInteger","newCategory","toFixed","id","v4","prevState","createNewCategory","newCommand","type","categoryName","categoryPrice","categoryAmount","createNewExecutedCommand","placeholder","value","onChange","target","isNaN","some","renderError","AddItem","categoryId","setCategoryId","newAmount","setNewAmount","map","ctgry","createAddItemCommand","Clear","onClick","emptyCategories","filter","createNewClearCommand","List","yearBoundaries","firstYear","lastYear","months","DateInput","year","month","day","setYear","setMonth","setDay","years","yearsToRender","i","push","yearsRender","dates","selectedMonth","daysInMonth","days","daysRender","Purchase","createPurchaseCommand","disabled","Report","executedCommands","func","commands","result","length","sort","a","b","localeCompare","purchasedCategories","total","allPurchaseCommands","reduce","prev","current","createNewReportCommand","CommandsPage","render","Header","setCommand","Output","purchaseCommands","categorie","renderCommand","App","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ba3a83.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { v4 } from 'uuid';\n\nimport './AddCategory.scss';\n\nexport const AddCategory = ({ categories, command, setCategories, setExecutedCommands }) => {\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [amount, setAmount] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  const createNewCategory = () => {\n    if ('') {\n      console.log('are');\n    }\n    const newCategory = {\n      name,\n      price: +Number(price).toFixed(2),\n      amount: +amount,\n      id: v4(),\n    }\n\n    if (amount === '') {\n      newCategory.amount = 0;\n    }\n\n    setCategories(prevState => [...prevState, newCategory]);\n  };\n\n  const createNewExecutedCommand = () => {\n    const newCommand = {\n      type: command,\n      id: v4(),\n      categoryName: name,\n      categoryPrice: +Number(price).toFixed(2),\n      categoryAmount: +amount,\n    }\n\n    if (amount === '') {\n      newCommand.categoryAmount = 0;\n    }\n\n    setExecutedCommands(prevState => [...prevState, newCommand]);\n  };\n\n  const renderError = () => {\n    switch(true) {\n      case name === '':\n        return <p className=\"error\">Please provide a name for category!</p>\n  \n      case price === '':\n        return <p className=\"error\">Please provide a price for category!</p>\n\n      case categories.some(category => category.name === name):\n        return <p className=\"error\">The category already exists!</p>\n\n      case !Number.isInteger(+amount) && amount !== '':\n        return <p className=\"error\">Please provide integer number from amount!</p>\n\n      default:\n        return <p className=\"error\">Please check that all fields are filled</p>\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const existingCategory = categories.find(category => category.name === name)\n\n    if (\n      existingCategory\n      || name === ''\n      || price === ''\n      || (!Number.isInteger(+amount) && amount !== '')\n      || +amount < 0\n      || +price <= 0\n    ) {\n      setIsError(true);\n    } else {\n      createNewCategory();\n      createNewExecutedCommand();\n      setName('');\n      setPrice('');\n      setAmount('');\n    }\n  }\n\n  return (\n    <>\n      <form className=\"category conteiner\" onSubmit={handleSubmit}>\n        <p className=\"category__command command\">{'>'} {command}</p>\n        <input\n          className=\"category__name input\"\n          type=\"text\"\n          placeholder=\"Category name\"\n          value={name}\n          onChange={(event) => {\n            setIsError(false);\n            setName(event.target.value)\n          }}\n        />\n        <input\n          className=\"category__price input\"\n          type=\"number\"\n          placeholder=\"Price\"\n          value={price}\n          onChange={(event) => {\n            setIsError(false);\n            if (!isNaN(+event.target.value)) {\n              setPrice(event.target.value)\n            }\n          }}\n        />\n        <input\n          className=\"category__amount input\"\n          type=\"number\"\n          placeholder=\"Amount\"\n          value={amount}\n          onChange={(event) => {\n            setIsError(false);\n            if (!isNaN(+event.target.value)) {\n              setAmount(event.target.value)\n            }\n          }}\n        />\n        <button\n          className=\"category__button button\"\n          type=\"submit\"\n        >\n          Execute\n        </button>\n      </form>\n      {isError && (\n        renderError()\n      )}\n    </>\n  );\n}","import React, { useState } from 'react';\nimport { v4 } from 'uuid';\n\nexport const AddItem = ({ categories, command, setCategories, setExecutedCommands }) => {\n  const [categoryId, setCategoryId] = useState('default');\n  const [newAmount, setNewAmount] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  const addAmountToCategory = () => {\n    setCategories(prevState => {\n      return prevState.map(category => {\n        if (category.id === categoryId) {\n          category.amount += +newAmount;\n        }\n\n        return category;\n      })\n    })\n  };\n\n  const createAddItemCommand = () => {\n    const category = categories.find(ctgry => ctgry.id === categoryId);\n\n    const newCommand = {\n      type: command,\n      id: v4(),\n      categoryName: category.name,\n      categoryPrice: category.price,\n      categoryAmount: category.amount,\n    };\n\n    setExecutedCommands(prevState => [...prevState, newCommand]);\n  };\n\n  const renderError = () => {\n    switch (true) {\n      case categoryId === 'default':\n        return <p className=\"error\">Please select a category!</p>\n\n      case !Number.isInteger(+newAmount) && newAmount !== '':\n        return <p className=\"error\">Please provide integer number from amount!</p>\n\n      default:\n        return <p className=\"error\">Please provide amount!</p>\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (newAmount === '' || !Number.isInteger(+newAmount) || categoryId === 'default') {\n      setIsError(true);\n    } else {\n      addAmountToCategory();\n      createAddItemCommand();\n      setNewAmount('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"item item--parameters conteiner commands-interface\" onSubmit={handleSubmit}>\n        <p className=\"command\">{'>'} {command}</p>\n        <select\n          className=\"input\"\n          value={categoryId}\n          onChange={event => {\n            setIsError(false);\n            setCategoryId(event.target.value);\n          }}\n        >\n          <option value=\"default\">Select category</option>\n          {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n        </select>\n        <input\n          className=\"input\"\n          type=\"number\"\n          value={newAmount}\n          onChange={event => {\n            setIsError(false);\n            if (!isNaN(+event.target.value)) {\n              setNewAmount(event.target.value)\n            }\n          }}\n        />\n        <button\n          className=\"button\"\n          type=\"submit\"\n        >\n          Execute\n        </button>\n      </form>\n      {isError && (\n        renderError()\n      )}\n    </>\n  );\n}","import React from 'react';\n\nimport { v4 } from 'uuid';\n\nexport const Clear = ({ command, categories, setCategories, setExecutedCommands }) => {\n\n  const clearAllEmptyCategories = () => {\n    setCategories(prevState => prevState.filter(category => category.amount > 0));\n  }\n\n  const createNewClearCommand = () => {\n    const emptyCategories = categories.filter(category => category.amount === 0);\n\n    const newCommand = {\n      type: command,\n      id: v4(),\n      emptyCategories\n    }\n\n    setExecutedCommands(prevState => [...prevState, newCommand]);\n  }\n\n  return (\n    <div className=\"conteiner one-command\">\n      <p className=\"command one-command__title\">{'>'} {command}</p>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => {\n          createNewClearCommand();\n          clearAllEmptyCategories();\n        }}\n      >\n        Execute\n      </button>\n    </div>\n  )\n};\n","import React from 'react';\n\nimport { v4 } from 'uuid';\n\nexport const List = ({ command, categories, setExecutedCommands }) => {\n\n  const createNewListCommand = () => {\n    const newCommand = {\n      type: command,\n      id: v4(),\n      categories\n    }\n\n    setExecutedCommands(prevState => [...prevState, newCommand]);\n  }\n\n  return (\n    <div className=\"conteiner one-command\">\n      <p className=\"command one-command__title\">{'>'} {command}</p>\n      <button\n        className=\"button list__button\"\n        type=\"button\"\n        onClick={createNewListCommand}\n      >\n        Execute\n      </button>\n    </div>\n  );\n}","export const yearBoundaries = {\n  firstYear: 2015,\n  lastYear: 2030\n}\n\nexport const months = [\n  \"01\",\n  \"02\",\n  \"03\",\n  \"04\",\n  \"05\",\n  \"06\",\n  \"07\",\n  \"08\",\n  \"09\",\n  \"10\",\n  \"11\",\n  \"12\",\n]","import React from 'react';\n\nimport * as dates from '../../utils/utils';\n\nexport const DateInput = ({\n  year,\n  month,\n  day,\n  setIsError,\n  setYear,\n  setMonth,\n  setDay\n}) => {\n\n  const yearsRender = (years) => {\n    const yearsToRender = [];\n    for (let i = years.firstYear; i <= years.lastYear; i++) {\n      yearsToRender.push(i);\n    }\n\n    return yearsToRender.map(year => <option key={year} value={year}>{year}</option>);\n  };\n\n  const daysRender = (selectedMonth) => {\n    let daysInMonth;\n    let days = [];\n\n    switch (selectedMonth) {\n      case '01':\n      case '03':\n      case '05':\n      case '07':\n      case '08':\n      case '10':\n      case '12':\n        daysInMonth = 31;\n        break;\n\n      case '04':\n      case '06':\n      case '09':\n      case '11':\n        daysInMonth = 30;\n        break;\n\n      case '02':\n        daysInMonth = 28;\n        break;\n\n      default:\n        daysInMonth = 'Select month first';\n    }\n\n    if (Number.isInteger(daysInMonth)) {\n      for (let i = 1; i <= daysInMonth; i++) {\n        if (i < 10) {\n          days.push(`0${i}`);\n        } else {\n          days.push(`${i}`);\n        }\n      }\n      \n      return days.map(day => <option key={day} value={day}>{day}</option>)\n    } else {\n      days.push(daysInMonth);\n\n      return days.map(day => <option key={day} value=\"default\">{day}</option>)\n    }\n  }\n\n  return (\n    <>\n      <select\n        value={year}\n        className=\"input\"\n        onChange={(event) => {\n          setIsError(false);\n          setYear(event.target.value)\n        }}\n      >\n        <option value=\"default\">\n          Select year\n        </option>\n        {yearsRender(dates.yearBoundaries)}\n      </select>\n      <select\n        value={month}\n        className=\"input\"\n        onChange={(event) => {\n          setIsError(false);\n          setMonth(event.target.value);\n        }}\n      >\n        <option value=\"default\">\n          Select month\n        </option>\n        {dates.months.map(month => <option key={month} value={month}>{month}</option>)}\n      </select>\n      <select\n        value={day}\n        className=\"input\"\n        onChange={(event) => {\n          setIsError(false);\n          setDay(event.target.value)\n        }}\n      >\n        <option value=\"default\">\n          Select day\n        </option>\n        {daysRender(month)}\n      </select>\n    </>\n  );\n}","import React, { useState } from 'react';\n\nimport { v4 } from 'uuid';\n\nimport { DateInput } from '../DateInput';\n\nexport const Purchase = ({ categories, command, setCategories, setExecutedCommands }) => {\n  const [categoryId, setCategoryId] = useState('default');\n  const [isError, setIsError] = useState(false);\n  const [year, setYear] = useState('default');\n  const [month, setMonth] = useState('default');\n  const [day, setDay] = useState('default');\n\n  const purchaseCategory = () => {\n    setCategories(prevState => {\n      return prevState.map(category => {\n        if (category.id === categoryId) {\n          category.amount = category.amount - 1;\n        }\n\n        return category;\n      })\n    })\n  };\n\n  const createPurchaseCommand = () => {\n    const category = categories.find(ctgry => ctgry.id === categoryId);\n\n    const newCommand = {\n      type: command,\n      id: v4(),\n      categoryName: category.name,\n      categoryPrice: category.price,\n      categoryId,\n      year,\n      month,\n      day,\n    };\n\n    setExecutedCommands(prevState => [...prevState, newCommand]);\n  };\n\n  const setButton = () => {\n    const category = categories.find(ctgry => ctgry.id === categoryId);\n\n    if (category.amount === 0) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const renderError = () => {\n    switch (true) {\n      case categoryId === 'default': \n        return <p className=\"error\">Please select a category!</p>\n\n      case year === 'default':\n        return <p className=\"error\">Please select a year!</p>\n      \n      case month === 'default':\n        return <p className=\"error\">Please select a month!</p>\n\n      case day === 'default':\n        return <p className=\"error\">Please select a day!</p>\n\n      default:\n        return <p className=\"error\">Please provide a date!</p>\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (year === 'default' || month === 'default' || day === 'default') {\n      setIsError(true);\n    } else {\n      purchaseCategory();\n      createPurchaseCommand();\n      setCategoryId('default');\n      setYear('default');\n      setMonth('default');\n      setDay('default');\n    }\n  }\n\n  return (\n    <>\n      <form className=\"conteiner commands-interface\" onSubmit={handleSubmit}>\n        <p className=\"command\">{'>'} {command}</p>\n        <select\n          className=\"input\"\n          value={categoryId}\n          onChange={event => {\n            setIsError(false);\n            setCategoryId(event.target.value);\n          }}\n        >\n          <option value=\"default\">Select category</option>\n          {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n        </select>\n        <DateInput\n          year={year}\n          month={month}\n          day={day}\n          setIsError={setIsError}\n          setYear={setYear}\n          setMonth={setMonth}\n          setDay={setDay}\n        />\n        <button\n          className=\"button\"\n          type=\"submit\"\n          disabled={categoryId !== 'default' && setButton()}\n        >\n          Execute\n        </button>\n      </form>\n      {isError && renderError()}\n    </>\n  );\n}","import React, { useState } from 'react';\n\nimport { v4 } from 'uuid';\n\nimport { DateInput } from '../DateInput';\n\nexport const Report = ({\n  command,\n  categories,\n  executedCommands,\n  setCategories,\n  setExecutedCommands,\n}) => {\n  const [isError, setIsError] = useState(false);\n  const [year, setYear] = useState('default');\n  const [month, setMonth] = useState('default');\n  const [day, setDay] = useState('default');\n\n  const func = (commands) => {\n    // let result = {}\n\n    // for (let i = 0; i < commands.length; i++) {\n    //   if (result.hasOwnProperty(commands[i].categoryName)) {\n    //     result[commands[i].categoryName] += 1\n    //   } else {\n    //     result[commands[i].categoryName] = 1\n    //   }\n    // }\n\n    // return Object.entries(result).map(entry => entry.reduce((prev, curr) => `${prev} ${curr}`));\n\n    let result = [];\n\n    for (let i = 0; i < commands.length; i++) {\n      const isCategoryExists = result.some(category => category.name === commands[i].categoryName);\n\n      if (isCategoryExists) {\n        const existingCategory = result.find(category => category.name === commands[i].categoryName);\n\n        existingCategory.amount += 1;\n      } else {\n        const category = {\n          name: commands[i].categoryName,\n          price: commands[i].categoryPrice,\n          amount: 1,\n        }\n\n        result.push(category)\n      }\n    }\n\n    return result.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  const createNewReportCommand = () => {\n    let purchasedCategories;\n    let total;\n\n    const newCommand = {\n      type: command,\n      id: v4(),\n      purchasedCategories,\n      total,\n      year,\n      month\n    };\n\n    if (day === 'default') {\n      const allPurchaseCommands = executedCommands.filter(\n        command => command.type === 'purchase' && command.year === year && command.month === month\n      );\n\n      newCommand.purchasedCategories = func(allPurchaseCommands);\n      newCommand.total = allPurchaseCommands.reduce((prev, current) => prev + current.categoryPrice, 0);\n      newCommand.type = newCommand.type + ' month';\n    } else {\n      const allPurchaseCommands = executedCommands.filter(\n        command => command.type === 'purchase' && command.year === year && command.month === month && command.day === day\n      );\n\n      newCommand.purchasedCategories = func(allPurchaseCommands);\n      newCommand.total = allPurchaseCommands.reduce((prev, current) => prev + current.categoryPrice, 0);\n      newCommand.type = newCommand.type + ' day';\n      newCommand.day = day;\n    }\n\n    setExecutedCommands(prevState => [...prevState, newCommand]);\n  }\n\n  const renderError = () => {\n    switch (true) {\n      case year === 'default':\n        return <p className=\"error\">Please select a year!</p>\n      \n      case month === 'default':\n        return <p className=\"error\">Please select a month!</p>\n\n      default:\n        return <p className=\"error\">Please provide a date!</p>\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (year === 'default' || month === 'default') {\n      setIsError(true);\n    } else {\n      createNewReportCommand();\n    }\n  }\n\n  return (\n    <>\n      <form className=\"conteiner commands-interface\" onSubmit={handleSubmit}>\n        <p className=\"command\">{'>'} {command}</p>\n        <DateInput\n          year={year}\n          month={month}\n          day={day}\n          setIsError={setIsError}\n          setYear={setYear}\n          setMonth={setMonth}\n          setDay={setDay}\n        />\n        <button\n          className=\"button\"\n          type=\"submit\"\n        >\n          Execute\n        </button>\n      </form>\n      {isError && renderError()}\n    </>\n  );\n}","import React from 'react';\n\nimport { AddCategory } from '../AddCategory';\nimport { AddItem } from '../AddItem';\nimport { Clear } from '../Clear';\nimport { List } from '../List';\nimport { Purchase } from '../Purchase';\nimport { Report } from '../Report';\n\nimport './CommandsPage.scss';\n\nexport const CommandsPage = ({ categories, command, executedCommands, setCategories, setExecutedCommands }) => {\n\n  const render = (command) => {\n    switch (command) {\n      case 'addCategory':\n        return (\n          <AddCategory\n            categories={categories}\n            command={command}\n            setCategories={setCategories}\n            setExecutedCommands={setExecutedCommands}\n          />\n        );\n\n      case 'addItem':\n        return (\n          <AddItem\n            categories={categories}\n            command={command}\n            setCategories={setCategories}\n            setExecutedCommands={setExecutedCommands}\n          />\n        );\n\n      case 'purchase':\n        return (\n          <Purchase\n            categories={categories}\n            command={command}\n            executedCommands={executedCommands}\n            setCategories={setCategories}\n            setExecutedCommands={setExecutedCommands}\n          />\n        );\n\n      case 'list':\n        return (\n          <List\n            command={command}\n            categories={categories}\n            setExecutedCommands={setExecutedCommands}\n          />\n        );\n\n      case 'clear':\n        return (\n          <Clear\n            command={command}\n            categories={categories}\n            setCategories={setCategories}\n            setExecutedCommands={setExecutedCommands}\n          />\n        );\n\n      case 'report':\n        return (\n          <Report\n            command={command}\n            categories={categories}\n            executedCommands={executedCommands}\n            setCategories={setCategories}\n            setExecutedCommands={setExecutedCommands}\n          />\n        );\n\n      default:\n        return <p>To start select a command!</p>\n    }\n  }\n  \n  return (\n    <div className=\"commands commands--parameters\">\n      {render(command)}\n    </div>\n  );\n}","import React from 'react';\n\nimport './Header.scss';\n\nexport const Header = ({ setCommand }) => {\n  return (\n    <header className=\"header header--parameters\">\n      <h2 className=\"header__title\">Vending machine</h2>\n      <select\n        className=\"header__select\"\n        onChange={(event) => setCommand(event.target.value)}\n      >\n        <option value=\"addCategory\">Select command</option>\n        <option value=\"addCategory\">addCategory</option>\n        <option value=\"addItem\">addItem</option>\n        <option value=\"purchase\">purchase</option>\n        <option value=\"list\">list</option>\n        <option value=\"clear\">clear</option>\n        <option value=\"report\">report</option>\n      </select>\n    </header>\n  )\n}","import React from 'react';\n\nimport './Output.scss';\n\nexport const Output = ({ executedCommands }) => {\n\n  const renderCommand = (command) => {\n    switch(command.type) {\n      case 'addCategory':\n      case 'addItem':\n        return (\n          <li className=\"output__item\" key={command.id}>\n            {`${command.categoryName} ${command.categoryPrice.toFixed(2)} ${command.categoryAmount}`}\n          </li>\n        )\n\n      case 'purchase':\n        return (\n          <li className=\"output__item\" key={command.id}>\n            {`${command.year}-${command.month}-${command.day}`}<br />\n            {`${command.categoryName} ${command.categoryPrice.toFixed(2)}`}\n          </li>\n        )\n\n      case 'list':\n        return (\n          <li className=\"output__item\" key={command.id}>\n            {command.categories.length !== 0\n              ? [...command.categories].sort((a, b) => b.amount - a.amount).map(\n                  category => (\n                    <>{`${category.name} ${category.price.toFixed(2)} ${category.amount}`}<br /></>\n                ))\n              : 'There is no categories'}\n          </li>\n        );\n\n      case 'clear':\n        return (\n          command.emptyCategories.map(\n            category => (\n              <li className=\"output__item\" key={category.id}>{`${category.name} ${category.price.toFixed(2)}`}</li>\n          ))\n        )\n\n      case 'report month':\n        return (\n          command.purchaseCommands === 0\n          ? (\n            <li className=\"output__item\" key={command.id}>\n              {`${command.year}-${command.month}`}\n              There is no purchases\n            </li>\n          )\n          : (<li className=\"output__item\" key={command.id}>\n              {`${command.year}-${command.month}`}<br />\n              {command.purchasedCategories.map(\n                categorie => (\n                  <span key={categorie.name}>\n                    {`${categorie.name} ${(categorie.price * categorie.amount).toFixed(2)} ${categorie.amount}`}<br/>\n                  </span>\n                )\n              )}\n              {`> Total: ${command.total}`}\n            </li>\n          )\n        );\n\n      case 'report day':\n        return (\n          command.purchaseCommands === 0\n          ? (\n            <li className=\"output__item\" key={command.id}>\n              {`${command.year}-${command.month}-${command.day}`}\n              There is no purchases\n            </li>\n          )\n          : (<li className=\"output__item\" key={command.id}>\n              {`${command.year}-${command.month}-${command.day}`}<br />\n              {command.purchasedCategories.map(\n                categorie => (\n                  <span key={categorie.name}>\n                    {`${categorie.name} ${(categorie.price * categorie.amount).toFixed(2)} ${categorie.amount}`}<br/>\n                  </span>\n                )\n              )}\n              {`> Total: ${command.total}`}\n            </li>\n          )\n        );\n\n      default:\n        return <p>Error</p>;\n    }\n  }\n\n  return (\n    <div className=\"output\">\n      <p className=\"output__header\">Output</p>\n      <ul className=\"output__list\">\n        {executedCommands.map(command => renderCommand(command))}\n      </ul>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { CommandsPage } from './components/CommandsPage';\nimport { Header } from './components/Header';\nimport { Output } from './components/Output';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [executedCommands, setExecutedCommands] = useState([]);\n  const [command, setCommand] = useState('');\n\n  console.log(\"categories\", categories);\n  console.log(\"executedCommands\", executedCommands);\n\n  return (\n    <div className=\"App\">\n      <Header setCommand={setCommand} />\n      <CommandsPage\n        categories={categories}\n        command={command}\n        executedCommands={executedCommands}\n        setCategories={setCategories}\n        setExecutedCommands={setExecutedCommands}\n      />\n      <Output executedCommands={executedCommands} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}